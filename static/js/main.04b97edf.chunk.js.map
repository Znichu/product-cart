{"version":3,"sources":["helpers/format-money.ts","assets/img/logo.jpg","components/header.tsx","store/cart-reducer.ts","components/card.tsx","pages/product.tsx","store/products-reducer.ts","firebase.ts","assets/img/empty-cart.png","components/cart-item.tsx","pages/cart.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["options","style","currency","convertMoney","money","Intl","NumberFormat","format","Header","useSelector","state","cart","itemCount","totalPrise","className","to","src","logo","alt","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","initialState","items","sumItems","reduce","total","product","quantity","Number","item","price","toFixed","actions","id","type","Card","name","imgUrl","dispatch","useDispatch","onClick","ProductPage","cards","products","pizzas","map","p","imageUrl","process","config","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_ID","firebase","initializeApp","database","CartItem","totalCount","plusCartItem","minusCartItem","removeCartItem","Cart","i","href","cartEmptyImage","App","useEffect","allPizzas","ref","on","snapshot","forEach","snap","push","val","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","existedItem","find","currentCart","filter","store","applyMiddleware","save","createStore","createStoreWithMiddleware","load","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04b97edf.chunk.js","sourcesContent":["const options = { style: 'currency', currency: 'RUB' };\r\n\r\nexport const convertMoney = (money: number) => {\r\n    const formatter = new Intl.NumberFormat('ru-RU', options);\r\n    return formatter.format(money);\r\n};","export default __webpack_public_path__ + \"static/media/logo.8c133a41.jpg\";","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../store/store\";\r\nimport {convertMoney} from \"../helpers/format-money\";\r\nimport logo from \"../assets/img/logo.jpg\"\r\n\r\n\r\nexport const Header = () => {\r\n\r\n    const { itemCount, totalPrise } = useSelector((state: RootState) => state.cart)\r\n\r\n    return (\r\n        <div className=\"header-container\">\r\n            <div className=\"logo\">\r\n                <Link to=\"/\">\r\n                <img src={logo} alt=\"pizza\"/>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <Link to='/cart'>\r\n                    <button className=\"button button--cart\">\r\n                        { totalPrise > 0 &&\r\n                            <>\r\n                        <span>{convertMoney(totalPrise)}</span>\r\n                        < div className=\"button__delimiter\"></div>\r\n                        </>\r\n                        }\r\n                        <svg\r\n                            width=\"18\"\r\n                            height=\"18\"\r\n                            viewBox=\"0 0 18 18\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                stroke=\"white\"\r\n                                strokeWidth=\"1.8\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                            />\r\n                            <path\r\n                                d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                stroke=\"white\"\r\n                                strokeWidth=\"1.8\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                            />\r\n                            <path\r\n                                d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                stroke=\"white\"\r\n                                strokeWidth=\"1.8\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                            />\r\n                        </svg>\r\n                        {\r\n                            itemCount > 0 &&\r\n                            <span>{itemCount}</span>\r\n                        }\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {InferActionTypes} from \"./store\";\r\nimport {CartProductType, ItemCartType} from \"../types\";\r\n\r\nlet initialState = {\r\n    items: [] as Array<ItemCartType>,\r\n    itemCount: 0,\r\n    totalPrise: 0,\r\n};\r\n\r\n\r\nconst sumItems = (items: ItemCartType[]) => {\r\n    let itemCount = items.reduce((total, product) => product.quantity + total, 0);\r\n    let totalPrise = Number(items.reduce((total, product) => total + product.item.price * product.quantity, 0).toFixed(2));\r\n    return {itemCount, totalPrise}\r\n}\r\n\r\n//Reducer\r\nexport const CartReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"ADD_PIZZA_CART\": {\r\n            const existedItem = !!state.items.find(i => action.id === i.item.id);\r\n            if (existedItem) {\r\n                return {\r\n                    ...state,\r\n                    items: state.items.map(i => {\r\n                        if (i.item.id === action.id) {\r\n                            return {\r\n                                ...i,\r\n                                quantity: ++i.quantity\r\n                            }\r\n                        } else {\r\n                            return i\r\n                        }\r\n                    }),\r\n                    ...sumItems(state.items)\r\n                }\r\n            } else {\r\n                const currentCart = [...state.items, action.item];\r\n                return {\r\n                    ...state,\r\n                    items: [...state.items, action.item],\r\n                    ...sumItems(currentCart)\r\n                }\r\n            }\r\n        }\r\n        case \"PLUS_CART_ITEM\": {\r\n            return {\r\n                ...state,\r\n                items: state.items.map(i => {\r\n                    if (i.item.id === action.id) {\r\n                        return {\r\n                            ...i,\r\n                            quantity: ++i.quantity\r\n                        }\r\n                    } else {\r\n                        return i\r\n                    }\r\n                }),\r\n                ...sumItems(state.items)\r\n            }\r\n        }\r\n        case \"MINUS_CART_ITEM\": {\r\n            const currentCart = state.items.filter(i => i.item.id !== action.id && i.quantity > 0)\r\n            return {\r\n                ...state,\r\n                items: state.items.map(i => {\r\n                    if (i.item.id === action.id) {\r\n                        return {\r\n                            ...i,\r\n                            quantity: --i.quantity\r\n                        }\r\n                    } else {\r\n                        return i\r\n                    }\r\n                }).filter(i => i.quantity > 0),\r\n                ...sumItems(currentCart)\r\n            }\r\n        }\r\n        case \"REMOVE_CART_ITEM\": {\r\n            const currentCart = state.items.filter(i => i.item.id !== action.id)\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(i => i.item.id !== action.id),\r\n                ...sumItems(currentCart)\r\n            }\r\n        }\r\n        case 'CLEAR_CART':\r\n            return {items: [], itemCount: 0, totalPrise: 0};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Actions\r\nexport const actions = {\r\n    addPizzaCart: (id: number, item: ItemCartType) => ({type: 'ADD_PIZZA_CART', id, item} as const),\r\n    plusCartItem: (id: number) => ({type: 'PLUS_CART_ITEM', id} as const),\r\n    minusCartItem: (id: number) => ({type: 'MINUS_CART_ITEM', id} as const),\r\n    removeCartItem: (id: number) => ({type: 'REMOVE_CART_ITEM', id} as const),\r\n    clearCart: () => ({type: 'CLEAR_CART'} as const),\r\n};\r\n\r\n\r\n//Types\r\ntype InitialStateType = typeof initialState;\r\ntype ActionsTypes = InferActionTypes<typeof actions>;","import React from \"react\";\r\nimport {convertMoney} from \"../helpers/format-money\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../store/cart-reducer\";\r\n\r\ntype PropsType = {\r\n    name: string\r\n    imgUrl: string\r\n    price: number\r\n    id: number\r\n}\r\n\r\nexport const Card: React.FC<PropsType> = ({name, imgUrl, price, id}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const addPizzaCart = () => {\r\n        let obj = {\r\n            item: {\r\n                id,\r\n                name,\r\n                price,\r\n                imgUrl\r\n            },\r\n            quantity: 1\r\n        }\r\n        dispatch(actions.addPizzaCart(id, obj))\r\n    }\r\n\r\n    return (\r\n        <div className=\"shop-card\">\r\n            <figure>\r\n                <img src={imgUrl} alt={name}/>\r\n            </figure>\r\n            <div className=\"title\">\r\n                <h4>{name}</h4>\r\n            </div>\r\n            <div className=\"cta\">\r\n                <div className=\"price\">{convertMoney(price)}</div>\r\n                <button onClick={addPizzaCart} className=\"btn\">+ Добавить</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Card} from \"../components/card\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../store/store\";\r\n\r\n\r\nexport const ProductPage = () => {\r\n\r\n    const products = useSelector((state: RootState) => state.products.pizzas)\r\n\r\n    const cards = products.map(p => <Card key={p.id} id={p.id} name={p.name} imgUrl={p.imageUrl} price={p.price}/> )\r\n\r\n    return (\r\n        <div className=\"products-container\">\r\n            {cards}\r\n        </div>\r\n    )\r\n}","import {InferActionTypes, RootState} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {ProductItemType} from \"../types\";\r\n\r\nlet initialState = {\r\n    pizzas: [] as ProductItemType[]\r\n};\r\n\r\n//Reducer\r\nexport const ProductsReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_ALL_PRODUCTS\": {\r\n            return {\r\n                ...state,\r\n                pizzas: action.pizzas\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Actions\r\nexport const actions = {\r\n    setAllProducts: (pizzas: ProductItemType[]) => ({ type: \"SET_ALL_PRODUCTS\", pizzas } as const),\r\n};\r\n\r\n//Thunk\r\nexport const THUNK = (): ThunkType => async (dispatch) => {\r\n    try {\r\n        //code\r\n    } catch (e) {\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\n\r\n//Types\r\ntype InitialStateType = typeof initialState;\r\ntype ThunkType = ThunkAction<Promise<void>, RootState, {}, ActionsTypes>;\r\ntype ActionsTypes = InferActionTypes<typeof actions>;","import firebase from \"firebase\";\r\n\r\nconst {\r\n    REACT_APP_API_KEY,\r\n    REACT_APP_AUTH_DOMAIN,\r\n    REACT_APP_PROJECT_ID,\r\n    REACT_APP_STORAGE_BUCKET,\r\n    REACT_APP_MESSAGING_SENDER_ID,\r\n    REACT_APP_ID\r\n} = process.env\r\n\r\nlet config = {\r\n    apiKey: REACT_APP_API_KEY,\r\n    authDomain: REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: \"https://react-pizza-765eb.firebaseio.com\",\r\n    projectId: REACT_APP_PROJECT_ID,\r\n    storageBucket: REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: REACT_APP_ID\r\n};\r\n\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase.database();\r\n","export default __webpack_public_path__ + \"static/media/empty-cart.db905d1f.png\";","import React from \"react\";\r\nimport {convertMoney} from \"../helpers/format-money\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    name: string\r\n    totalCount: number\r\n    imgUrl: string\r\n    price: number\r\n    plusCartItem: (id: number) => void\r\n    minusCartItem: (id: number) => void\r\n    removeCartItem: (id: number) => void\r\n}\r\n\r\nexport const CartItem: React.FC<PropsType> = ({ id, name, totalCount, price, imgUrl, plusCartItem, minusCartItem, removeCartItem}) => {\r\n\r\n    const handleRemoveClick = () => {\r\n        removeCartItem(id)\r\n    };\r\n\r\n    const handlePlusItem = () => {\r\n        plusCartItem(id)\r\n    };\r\n\r\n    const handleMinusItem = () => {\r\n        minusCartItem(id)\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart__item\">\r\n            <div className=\"cart__item-img\">\r\n                <img\r\n                    className=\"pizza-block__image\"\r\n                    src={imgUrl}\r\n                    alt=\"Pizza\"\r\n                />\r\n            </div>\r\n            <div className=\"cart__item-info\">\r\n                <h3>{name}</h3>\r\n            </div>\r\n            <div className=\"cart__item-count\">\r\n                <div onClick={handleMinusItem}  className=\"button button--outline button--circle cart__item-count-minus\">\r\n                    <svg\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                        viewBox=\"0 0 10 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n                <b>{totalCount}</b>\r\n                <div onClick={handlePlusItem} className=\"button button--outline button--circle cart__item-count-plus\">\r\n                    <svg\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                        viewBox=\"0 0 10 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            <div className=\"cart__item-price\">\r\n                <b>{convertMoney(price)}</b>\r\n            </div>\r\n            <div className=\"cart__item-remove\">\r\n                <button onClick={handleRemoveClick} className=\"button button--circle button--outline\" >\r\n                    <svg\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                        viewBox=\"0 0 10 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport cartEmptyImage from \"../assets/img/empty-cart.png\"\r\nimport {RootState} from \"../store/store\";\r\nimport { Link } from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {CartItem} from \"../components/cart-item\";\r\nimport {convertMoney} from \"../helpers/format-money\";\r\nimport {actions} from \"../store/cart-reducer\";\r\n\r\n\r\nexport const Cart = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {itemCount, items, totalPrise} = useSelector((state: RootState) => state.cart);\r\n\r\n    const plusCartItem = (id: number) => {\r\n        dispatch(actions.plusCartItem(id))\r\n    }\r\n    const minusCartItem = (id: number) => {\r\n        dispatch(actions.minusCartItem(id))\r\n    }\r\n    const removeCartItem = (id: number) => {\r\n        dispatch(actions.removeCartItem(id))\r\n    }\r\n    const clearCart = () => {\r\n        dispatch(actions.clearCart())\r\n    }\r\n\r\n    return (\r\n        <div className=\"container container--cart\">\r\n            {itemCount ? (\r\n                <div className=\"cart\">\r\n                    <div className=\"cart__top\">\r\n                        <h2 className=\"content__title\">\r\n                            <svg\r\n                                width=\"18\"\r\n                                height=\"18\"\r\n                                viewBox=\"0 0 18 18\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n                            Корзина\r\n                        </h2>\r\n                        <div onClick={clearCart} className=\"cart__clear\">\r\n                            <svg\r\n                                width=\"20\"\r\n                                height=\"20\"\r\n                                viewBox=\"0 0 20 20\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M2.5 5H4.16667H17.5\"\r\n                                    stroke=\"#B6B6B6\"\r\n                                    strokeWidth=\"1.2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                                    stroke=\"#B6B6B6\"\r\n                                    strokeWidth=\"1.2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M8.33337 9.16667V14.1667\"\r\n                                    stroke=\"#B6B6B6\"\r\n                                    strokeWidth=\"1.2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M11.6666 9.16667V14.1667\"\r\n                                    stroke=\"#B6B6B6\"\r\n                                    strokeWidth=\"1.2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n\r\n                            <span >Очистить корзину</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content__items\">\r\n                        {\r\n                            items.map(i => <CartItem id={i.item.id}\r\n                                                     name={i.item.name}\r\n                                                     totalCount={i.quantity}\r\n                                                     imgUrl={i.item.imgUrl}\r\n                                                     price={i.item.price}\r\n                                                     key={i.item.id}\r\n                                                     minusCartItem={minusCartItem}\r\n                                                     plusCartItem={plusCartItem}\r\n                                                     removeCartItem={removeCartItem}\r\n                            />)\r\n                        }\r\n                    </div>\r\n                    <div className=\"cart__bottom\">\r\n                        <div className=\"cart__bottom-details\">\r\n              <span>\r\n                Всего пицц: <b>{itemCount} шт.</b>\r\n              </span>\r\n                            <span>\r\n                Сумма заказа: <b>{convertMoney(totalPrise)}</b>\r\n              </span>\r\n                        </div>\r\n                        <div className=\"cart__bottom-buttons\">\r\n                            <a href=\"/\" className=\"button button--outline button--add go-back-btn\">\r\n                                <svg\r\n                                    width=\"8\"\r\n                                    height=\"14\"\r\n                                    viewBox=\"0 0 8 14\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M7 13L1 6.93015L6.86175 1\"\r\n                                        stroke=\"#D3D3D3\"\r\n                                        strokeWidth=\"1.5\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                </svg>\r\n                                <Link to=\"/\">\r\n                                    <span>Вернуться назад</span>\r\n                                </Link>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"cart cart--empty\">\r\n                    <h2>\r\n                        Корзина пустая <i>😕</i>\r\n                    </h2>\r\n                    <p>\r\n                        Вероятней всего, вы не заказывали ещё пиццу.\r\n                        <br/>\r\n                        Для того, чтобы заказать пиццу, перейди на главную страницу.\r\n                    </p>\r\n                    <img src={cartEmptyImage} alt=\"Empty cart\"/>\r\n                    <Link to=\"/\" className=\"button button--black\">\r\n                        <span>Вернуться назад</span>\r\n                    </Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\nimport {Header} from \"./components/header\";\nimport {ProductPage} from \"./pages/product\";\nimport {useDispatch} from \"react-redux\";\nimport {actions} from \"./store/products-reducer\";\nimport {ProductItemType} from \"./types\";\nimport firebase from \"./firebase\";\nimport {Route, Switch} from 'react-router-dom';\nimport {Cart} from \"./pages/cart\";\n\n\nfunction App() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        let allPizzas = [] as ProductItemType[];\n        firebase.ref(\"/pizzas\").on(\"value\", snapshot => {\n            snapshot.forEach(snap => {\n                allPizzas.push(snap.val());\n            });\n            dispatch(actions.setAllProducts(allPizzas))\n        });\n    }, [])\n\n\n    return (\n        <div className=\"wrapper\">\n            <Header/>\n            <div className=\"content\">\n                <Switch>\n                    <Route exact path=\"/\" render={() => <ProductPage/>}/>\n                    <Route exact path=\"/cart\" render={() => <Cart/>}/>\n                </Switch>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {ProductsReducer} from \"./products-reducer\";\r\nimport {CartReducer} from \"./cart-reducer\";\r\nimport { save, load } from \"redux-localstorage-simple\"\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    products: ProductsReducer,\r\n    cart: CartReducer\r\n});\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(save())(createStore);\r\n\r\nexport const store = createStoreWithMiddleware(rootReducer, load());\r\n\r\n//Type\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U; } ? U : never;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/scss/app.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}